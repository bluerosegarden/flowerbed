{"Books":{"title":"Books","links":["Textbook-Collection"],"tags":["personal"],"content":"A place for me to talk about books.\nFavorite books §\n\nThe Locked Tomb series\n\nI actually have a (neglected) web shrine ninthtomb.rip but unfortunately I haven’t done much with it yet.\n\n\nThe Raven Cycle\nThe Spiderwick Chronicles\nThis Discworld Series\nSix of Crows Duology\n\nPath Forks §\n\nTextbook Collection\n"},"Goals":{"title":"Goals","links":[],"tags":["personal"],"content":"A place for me to just talk off the cuff about my personal goals and plans. At the moment it’s a little empty, but this is helpful as I begin to really dig into what I’m interested in."},"Japanese":{"title":"Japanese","links":["Textbook-Collection"],"tags":["learning"],"content":"This is my main page for collecting resources and planning my Japanese journey\nResources §\nTransclude of block japanese"},"Linguistics":{"title":"Linguistics","links":["Japanese"],"tags":["learning"],"content":"I am fascinated by language and the ways they evolve and the forms they take. While I mainly want to study linguistics in order to better help me learn Japanese, I would love to develop a conlang or two with it.\nResources §\nSites §\n\nhttps://iamautodidact.com/how-to-study-linguistics-on-your-own/\nhttps://allthingslinguistic.com/post/164874346205/how-to-teach-yourself-linguistics-online-for-free\nhttps://www.reddit.com/r/linguistics/comments/tua48/faq_i_want_to_learn_more_about_linguistics_where/\nhttps://linguistics.stackexchange.com/questions/15207/method-for-self-teaching\nhttps://www.newyorker.com/magazine/2021/04/19/how-did-a-self-taught-linguist-come-to-own-an-indigenous-language\n\nBooks §\nDescribing Morphosyntax by Thomas Payne\nUnorgqnized §\nIntroduction to Linguistics\nContrastive Phonology\nSemantics\nSociolinguistics - Additional Required reading\nBilingualism\nAfrican-American Vernacular English - Additional Required Reading\nStructure of Modern English\nOther good books on language:\nThe Unfolding of Language\nThrough the Language Glass: Why the World Looks Different in Other Languages\nThe Loom of Language: An Approach to the Mastery of Many Languages\nThe Language Instinct (+)"},"Math/Absolute-Values-in-Algebra":{"title":"Absolute Values in Algebra","links":[],"tags":[],"content":"Absolute values in algebra is a bit weird but aside from some specific rules they’re pretty fun to solve.\nFirst off, you cannot change the inside signs of an absolute value. Here’s an example:\n\nWhen solving for this, the first step is to make sure that once you get just the absolute values on one side and the rest of the equation on the other, the rest of the equation must be positive, if it’s negative it’s not a number.\n\nIf that works, then you must do two things rewrite the equation twice without the abs signs, one as normal and the other where the result is negative. Then solve the equation\n\nAbsolute Values in Equality Equations §\nHandling equality equations are pretty much the same, aside from a couple things.\nFirst, rewrite the equality as a normal equation:\n\nSolve like normal, however instead of writing the solution like normal, you need to perform an additional check to see how many intervals it has.\nAn ABS value can result in either a single interval like , or two intervals like \nIn order to test, replace x in the equation with a number (or two, or three) and if it fails where it should be true (or vice versa) that will tell you all you need to know!\nI personally test something between the two values, but any value can work.\n\nAs you can see in the above, 7 results in 0, which fails the equality, therefore the answer is !\nmjx-container[jax=&quot;SVG&quot;] {\n  direction: ltr;\n}\n\nmjx-container[jax=&quot;SVG&quot;] &gt; svg {\n  overflow: visible;\n  min-height: 1px;\n  min-width: 1px;\n}\n\nmjx-container[jax=&quot;SVG&quot;] &gt; svg a {\n  fill: blue;\n  stroke: blue;\n}\n\nmjx-container[jax=&quot;SVG&quot;][display=&quot;true&quot;] {\n  display: block;\n  text-align: center;\n  margin: 1em 0;\n}\n\nmjx-container[jax=&quot;SVG&quot;][display=&quot;true&quot;][width=&quot;full&quot;] {\n  display: flex;\n}\n\nmjx-container[jax=&quot;SVG&quot;][justify=&quot;left&quot;] {\n  text-align: left;\n}\n\nmjx-container[jax=&quot;SVG&quot;][justify=&quot;right&quot;] {\n  text-align: right;\n}\n\ng[data-mml-node=&quot;merror&quot;] &gt; g {\n  fill: red;\n  stroke: red;\n}\n\ng[data-mml-node=&quot;merror&quot;] &gt; rect[data-background] {\n  fill: yellow;\n  stroke: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; line[data-line], svg[data-table] &gt; g &gt; line[data-line] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; rect[data-frame], svg[data-table] &gt; g &gt; rect[data-frame] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; .mjx-dashed, svg[data-table] &gt; g &gt; .mjx-dashed {\n  stroke-dasharray: 140;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; .mjx-dotted, svg[data-table] &gt; g &gt; .mjx-dotted {\n  stroke-linecap: round;\n  stroke-dasharray: 0,140;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; g &gt; svg {\n  overflow: visible;\n}\n\n[jax=&quot;SVG&quot;] mjx-tool {\n  display: inline-block;\n  position: relative;\n  width: 0;\n  height: 0;\n}\n\n[jax=&quot;SVG&quot;] mjx-tool &gt; mjx-tip {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\nmjx-tool &gt; mjx-tip {\n  display: inline-block;\n  padding: .2em;\n  border: 1px solid #888;\n  font-size: 70%;\n  background-color: #F8F8F8;\n  color: black;\n  box-shadow: 2px 2px 5px #AAAAAA;\n}\n\ng[data-mml-node=&quot;maction&quot;][data-toggle] {\n  cursor: pointer;\n}\n\nmjx-status {\n  display: block;\n  position: fixed;\n  left: 1em;\n  bottom: 1em;\n  min-width: 25%;\n  padding: .2em .4em;\n  border: 1px solid #888;\n  font-size: 90%;\n  background-color: #F8F8F8;\n  color: black;\n}\n\nforeignObject[data-mjx-xml] {\n  font-family: initial;\n  line-height: normal;\n  overflow: visible;\n}\n\nmjx-container[jax=&quot;SVG&quot;] path[data-c], mjx-container[jax=&quot;SVG&quot;] use[data-c] {\n  stroke-width: 3;\n}\n"},"Math/Big-Unorganized-Math-Notes":{"title":"Big Unorganized Math Notes","links":["Math/Important-Formulas","Math/Big-Unorganized-Math-Notes"],"tags":[],"content":"Turns out making specific pages for each note has been bad for me actually making notes, so here I’m just gonna spam all the notes without much explaining. I’ll spin em off into their own notes later, or not, we’ll see lmao\nPolynomial functions §\nGraph Behavior §\nWhen the degree is even and the leading coefficient is positive\n\n\n\n\n                  \n                  Note \n                  \n                \n\n\nWhen the degree is even and the leading coefficient is negative\n\n\n\n\n                  \n                  Note \n                  \n                \n\n\nWhen the degree is odd and the leading coefficient is positive\n\n\n\n\n                  \n                  Note \n                  \n                \n\n\nWhen the degree is odd and the leading coefficient is negative\n\n\n\n\n                  \n                  Note \n                  \n                \n\n\nBecause of this you can determine the the behavior just by looking at the function\nZeroes of a Polynomial function §\nAll x-intercepts are zeroes (also known as roots) of a polynomial function, but not all zeroes of a polynomial function are x-intercepts.\nAlso all zeroes of function are a part of its factor! If  is a zero of  then  is a factor of .\nTo find the zeroes of a function, you set  to be 0, and then solve by factoring (You probably will need the Important Formulas).\n\nThere can’t be more zeroes than the degree of a function.\nIf you use the Important Formulas and get an imaginary number, it’s still a valid zero, even if it’s not a valid x-intercept.\nSo a function with a degree of 8, can have up to 8 zeroes, but they can be less.\nMultiplicities §\nA repeated zero is one that’s repeated, usually denoted by raising it to a certain power.\nFor example:\n\nAs a result, the zeroes of this function are . You don’t write the duplicated zero twice, however you describe it by having a multiplicity of 2 (or 3, or however many times that zero shows up)\nFor example:\n\nThe zero for this would be  with a multiplicity of 3.\nWhen the multiplicity is even, the graph bounces off the x-axis but does not cross it.\nWhen the multiplicity is odd, then the graph crosses the x-axis.\nCharacteristics of a graph §\nLet’s step through how to find the following characteristics of the following function and graph\n\n\n\n                  \n                  Note \n                  \n                \n\n\n\nDetermine if the graph opens up or down\nFind any x-intercepts\nFind any y-intercepts\nFind the Vertex\nDetermine if it is maximum or minimum\nGraph the function by hand\nor decreasing\nFind the domain\nFind the range\n\nDetermine if the graph opens up or down §\nThis is determined by whether or not the leading coefficient is positive or negative\nFind any x-intercepts §\nFind any y-intercepts §\nFind the Vertex §\nDetermine if it is maximum or minimum §\nGraph the function by hand §\nDetermine the intervals on which the function is increasing and/or decreasing §\nFind the domain §\nFind the range §\nmjx-container[jax=&quot;SVG&quot;] {\n  direction: ltr;\n}\n\nmjx-container[jax=&quot;SVG&quot;] &gt; svg {\n  overflow: visible;\n  min-height: 1px;\n  min-width: 1px;\n}\n\nmjx-container[jax=&quot;SVG&quot;] &gt; svg a {\n  fill: blue;\n  stroke: blue;\n}\n\nmjx-container[jax=&quot;SVG&quot;][display=&quot;true&quot;] {\n  display: block;\n  text-align: center;\n  margin: 1em 0;\n}\n\nmjx-container[jax=&quot;SVG&quot;][display=&quot;true&quot;][width=&quot;full&quot;] {\n  display: flex;\n}\n\nmjx-container[jax=&quot;SVG&quot;][justify=&quot;left&quot;] {\n  text-align: left;\n}\n\nmjx-container[jax=&quot;SVG&quot;][justify=&quot;right&quot;] {\n  text-align: right;\n}\n\ng[data-mml-node=&quot;merror&quot;] &gt; g {\n  fill: red;\n  stroke: red;\n}\n\ng[data-mml-node=&quot;merror&quot;] &gt; rect[data-background] {\n  fill: yellow;\n  stroke: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; line[data-line], svg[data-table] &gt; g &gt; line[data-line] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; rect[data-frame], svg[data-table] &gt; g &gt; rect[data-frame] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; .mjx-dashed, svg[data-table] &gt; g &gt; .mjx-dashed {\n  stroke-dasharray: 140;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; .mjx-dotted, svg[data-table] &gt; g &gt; .mjx-dotted {\n  stroke-linecap: round;\n  stroke-dasharray: 0,140;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; g &gt; svg {\n  overflow: visible;\n}\n\n[jax=&quot;SVG&quot;] mjx-tool {\n  display: inline-block;\n  position: relative;\n  width: 0;\n  height: 0;\n}\n\n[jax=&quot;SVG&quot;] mjx-tool &gt; mjx-tip {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\nmjx-tool &gt; mjx-tip {\n  display: inline-block;\n  padding: .2em;\n  border: 1px solid #888;\n  font-size: 70%;\n  background-color: #F8F8F8;\n  color: black;\n  box-shadow: 2px 2px 5px #AAAAAA;\n}\n\ng[data-mml-node=&quot;maction&quot;][data-toggle] {\n  cursor: pointer;\n}\n\nmjx-status {\n  display: block;\n  position: fixed;\n  left: 1em;\n  bottom: 1em;\n  min-width: 25%;\n  padding: .2em .4em;\n  border: 1px solid #888;\n  font-size: 90%;\n  background-color: #F8F8F8;\n  color: black;\n}\n\nforeignObject[data-mjx-xml] {\n  font-family: initial;\n  line-height: normal;\n  overflow: visible;\n}\n\nmjx-container[jax=&quot;SVG&quot;] path[data-c], mjx-container[jax=&quot;SVG&quot;] use[data-c] {\n  stroke-width: 3;\n}\n"},"Math/Completing-The-Square":{"title":"Completing The Square","links":[],"tags":[],"content":"Sometimes it’s easier to modify an equation so it becomes a full quadradic equation.\nTake the following:\n\nAs it is this is not factorable, and while you can use quadratic method instead, you can force it to be factorable!\nYou can do this whenever the b term is even, this will not work if b term is odd.\nFirst, move the c term to the other side of the equation, then multiply the middle term by 2 and add it to both sides of the equation\nMissing \\begin{align} or extra \\end{align}x^2+8x+16=-11+16  \\\\ \\color{blue}{x^2+8x+16=5} \\end{align}$$ Now, because the equation is in the format of $x^2+bx+2(b)=c$, we can rewrite it as the following!\n(x+4)^2=5\n\nmjx-container[jax=&quot;SVG&quot;] {\n  direction: ltr;\n}\n\nmjx-container[jax=&quot;SVG&quot;] &gt; svg {\n  overflow: visible;\n  min-height: 1px;\n  min-width: 1px;\n}\n\nmjx-container[jax=&quot;SVG&quot;] &gt; svg a {\n  fill: blue;\n  stroke: blue;\n}\n\nmjx-container[jax=&quot;SVG&quot;][display=&quot;true&quot;] {\n  display: block;\n  text-align: center;\n  margin: 1em 0;\n}\n\nmjx-container[jax=&quot;SVG&quot;][display=&quot;true&quot;][width=&quot;full&quot;] {\n  display: flex;\n}\n\nmjx-container[jax=&quot;SVG&quot;][justify=&quot;left&quot;] {\n  text-align: left;\n}\n\nmjx-container[jax=&quot;SVG&quot;][justify=&quot;right&quot;] {\n  text-align: right;\n}\n\ng[data-mml-node=&quot;merror&quot;] &gt; g {\n  fill: red;\n  stroke: red;\n}\n\ng[data-mml-node=&quot;merror&quot;] &gt; rect[data-background] {\n  fill: yellow;\n  stroke: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; line[data-line], svg[data-table] &gt; g &gt; line[data-line] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; rect[data-frame], svg[data-table] &gt; g &gt; rect[data-frame] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; .mjx-dashed, svg[data-table] &gt; g &gt; .mjx-dashed {\n  stroke-dasharray: 140;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; .mjx-dotted, svg[data-table] &gt; g &gt; .mjx-dotted {\n  stroke-linecap: round;\n  stroke-dasharray: 0,140;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; g &gt; svg {\n  overflow: visible;\n}\n\n[jax=&quot;SVG&quot;] mjx-tool {\n  display: inline-block;\n  position: relative;\n  width: 0;\n  height: 0;\n}\n\n[jax=&quot;SVG&quot;] mjx-tool &gt; mjx-tip {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\nmjx-tool &gt; mjx-tip {\n  display: inline-block;\n  padding: .2em;\n  border: 1px solid #888;\n  font-size: 70%;\n  background-color: #F8F8F8;\n  color: black;\n  box-shadow: 2px 2px 5px #AAAAAA;\n}\n\ng[data-mml-node=&quot;maction&quot;][data-toggle] {\n  cursor: pointer;\n}\n\nmjx-status {\n  display: block;\n  position: fixed;\n  left: 1em;\n  bottom: 1em;\n  min-width: 25%;\n  padding: .2em .4em;\n  border: 1px solid #888;\n  font-size: 90%;\n  background-color: #F8F8F8;\n  color: black;\n}\n\nforeignObject[data-mjx-xml] {\n  font-family: initial;\n  line-height: normal;\n  overflow: visible;\n}\n\nmjx-container[jax=&quot;SVG&quot;] path[data-c], mjx-container[jax=&quot;SVG&quot;] use[data-c] {\n  stroke-width: 3;\n}\n"},"Math/Exponents":{"title":"Exponents","links":[],"tags":[],"content":"Exponents are pretty easy to understand if you understand what squaring and cubing are, but exponential functions are a little wacky."},"Math/Important-Formulas":{"title":"Important Formulas","links":[],"tags":["math"],"content":"\nmjx-container[jax=&quot;SVG&quot;] {\n  direction: ltr;\n}\n\nmjx-container[jax=&quot;SVG&quot;] &gt; svg {\n  overflow: visible;\n  min-height: 1px;\n  min-width: 1px;\n}\n\nmjx-container[jax=&quot;SVG&quot;] &gt; svg a {\n  fill: blue;\n  stroke: blue;\n}\n\nmjx-container[jax=&quot;SVG&quot;][display=&quot;true&quot;] {\n  display: block;\n  text-align: center;\n  margin: 1em 0;\n}\n\nmjx-container[jax=&quot;SVG&quot;][display=&quot;true&quot;][width=&quot;full&quot;] {\n  display: flex;\n}\n\nmjx-container[jax=&quot;SVG&quot;][justify=&quot;left&quot;] {\n  text-align: left;\n}\n\nmjx-container[jax=&quot;SVG&quot;][justify=&quot;right&quot;] {\n  text-align: right;\n}\n\ng[data-mml-node=&quot;merror&quot;] &gt; g {\n  fill: red;\n  stroke: red;\n}\n\ng[data-mml-node=&quot;merror&quot;] &gt; rect[data-background] {\n  fill: yellow;\n  stroke: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; line[data-line], svg[data-table] &gt; g &gt; line[data-line] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; rect[data-frame], svg[data-table] &gt; g &gt; rect[data-frame] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; .mjx-dashed, svg[data-table] &gt; g &gt; .mjx-dashed {\n  stroke-dasharray: 140;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; .mjx-dotted, svg[data-table] &gt; g &gt; .mjx-dotted {\n  stroke-linecap: round;\n  stroke-dasharray: 0,140;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; g &gt; svg {\n  overflow: visible;\n}\n\n[jax=&quot;SVG&quot;] mjx-tool {\n  display: inline-block;\n  position: relative;\n  width: 0;\n  height: 0;\n}\n\n[jax=&quot;SVG&quot;] mjx-tool &gt; mjx-tip {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\nmjx-tool &gt; mjx-tip {\n  display: inline-block;\n  padding: .2em;\n  border: 1px solid #888;\n  font-size: 70%;\n  background-color: #F8F8F8;\n  color: black;\n  box-shadow: 2px 2px 5px #AAAAAA;\n}\n\ng[data-mml-node=&quot;maction&quot;][data-toggle] {\n  cursor: pointer;\n}\n\nmjx-status {\n  display: block;\n  position: fixed;\n  left: 1em;\n  bottom: 1em;\n  min-width: 25%;\n  padding: .2em .4em;\n  border: 1px solid #888;\n  font-size: 90%;\n  background-color: #F8F8F8;\n  color: black;\n}\n\nforeignObject[data-mjx-xml] {\n  font-family: initial;\n  line-height: normal;\n  overflow: visible;\n}\n\nmjx-container[jax=&quot;SVG&quot;] path[data-c], mjx-container[jax=&quot;SVG&quot;] use[data-c] {\n  stroke-width: 3;\n}\n"},"Math/Logarithms":{"title":"Logarithms","links":["Math/Exponents"],"tags":["learning","school"],"content":"Logarithms are weird.\nLogarithms are really, really weird.\nThey have lots of properties that are similar to both functions and variables, but they aren’t either. They’re lying to you. They’re Exponents!\nLogarithms basics §\nAt its core, a logarithm is the inverse of the following exponential function:\n\nThe graph of which is:\n\n\n                  \n                  Note \n                  \n                \n\n\nblue is \nred is , aka \n\n\nThe above is reformatted as this:\n\nFor reasons I do not know why, of the time it’s assumed that the  is 10 and is left out, so you usually see  as . Also for reasons I do not know why atm, is that  is used so much that it gets its own dedicated shorthand, \nLogarithm interactions §\nWhen adding, subtracting, dividing, or even exponentially increasing logarithms, you can’t simply do it. Remember, these are exponents in disguise!\nBecause of that, they behave like exponents when they interact with each other!\n\nBut the really weird bit about logarithms is how if you want to evaluate a logarithm that isn’t base 10, you can use the change of base formula and you get the answer, no extra steps needed!!\n\nThe crazy thing is, b can be anything, not just base 10 and it’ll work! For that reason it’s often that people just use  for  and vice versa.\nSolving Logarithmic (and exponential!) equations §\nThere are a few different ways you can solve logarithm problems when the x variable is in the exponent or inside the logarithmic argument.\nHowever, remember that if the original problem was a  then x cannot be \nSet bases to be the same §\nIf both sides of the equation are able to be rewritten so the bases are the same, you can set them to the same\n\nThen you can simply ignore the bases and solve as normal!\nMisplaced &amp;\\cancel{2}^{4x}&amp;=\\cancel{2}^8 \\\\ 4x&amp;=3 \\end{align}$$ ### Rewrite as exponential (or logarithmic) Sometimes its easiest to just convert an exponent to a logarithm! \n\\begin{align}\n4^{3x}&amp;=7 \\\n&amp;\\downarrow \\\n\\log_4 7&amp;=3x \\\n\\frac{\\ln 7}{\\ln 4}&amp;=3x\n\\end{align}\n\n\\begin{align}\n\\log(2x+1)&amp;=3 \\\n&amp;\\downarrow\\\n10^3&amp;=2x+1\n\\end{align}\nYou can&#039;t use &#039;macro parameter character #&#039; in math mode### Log both sides first Sometimes (especially if you have an $e$) simply taking the log of both sides is the easiest way to simplify it, because it removes it! \n\\begin{align}\ne^{x+1}&amp;=2 \\\n&amp;\\downarrow\\\n\\ln(e^{x+1})&amp;=\\ln(2)\\\n&amp;\\downarrow\\\nx+1&amp;=0.69314718056\n\\end{align}\nYou can&#039;t use &#039;macro parameter character #&#039; in math mode### Ignore! if both sides of the equation are logs, just ignore them! \n\\begin{align}\n\\log(2x+1)&amp;=\\log(3x+6) \\\n&amp;\\downarrow \\\n2x+1&amp;=3x+6\n\\end{align}\n\nmjx-container[jax=&quot;SVG&quot;] {\n  direction: ltr;\n}\n\nmjx-container[jax=&quot;SVG&quot;] &gt; svg {\n  overflow: visible;\n  min-height: 1px;\n  min-width: 1px;\n}\n\nmjx-container[jax=&quot;SVG&quot;] &gt; svg a {\n  fill: blue;\n  stroke: blue;\n}\n\nmjx-container[jax=&quot;SVG&quot;][display=&quot;true&quot;] {\n  display: block;\n  text-align: center;\n  margin: 1em 0;\n}\n\nmjx-container[jax=&quot;SVG&quot;][display=&quot;true&quot;][width=&quot;full&quot;] {\n  display: flex;\n}\n\nmjx-container[jax=&quot;SVG&quot;][justify=&quot;left&quot;] {\n  text-align: left;\n}\n\nmjx-container[jax=&quot;SVG&quot;][justify=&quot;right&quot;] {\n  text-align: right;\n}\n\ng[data-mml-node=&quot;merror&quot;] &gt; g {\n  fill: red;\n  stroke: red;\n}\n\ng[data-mml-node=&quot;merror&quot;] &gt; rect[data-background] {\n  fill: yellow;\n  stroke: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; line[data-line], svg[data-table] &gt; g &gt; line[data-line] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; rect[data-frame], svg[data-table] &gt; g &gt; rect[data-frame] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; .mjx-dashed, svg[data-table] &gt; g &gt; .mjx-dashed {\n  stroke-dasharray: 140;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; .mjx-dotted, svg[data-table] &gt; g &gt; .mjx-dotted {\n  stroke-linecap: round;\n  stroke-dasharray: 0,140;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; g &gt; svg {\n  overflow: visible;\n}\n\n[jax=&quot;SVG&quot;] mjx-tool {\n  display: inline-block;\n  position: relative;\n  width: 0;\n  height: 0;\n}\n\n[jax=&quot;SVG&quot;] mjx-tool &gt; mjx-tip {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\nmjx-tool &gt; mjx-tip {\n  display: inline-block;\n  padding: .2em;\n  border: 1px solid #888;\n  font-size: 70%;\n  background-color: #F8F8F8;\n  color: black;\n  box-shadow: 2px 2px 5px #AAAAAA;\n}\n\ng[data-mml-node=&quot;maction&quot;][data-toggle] {\n  cursor: pointer;\n}\n\nmjx-status {\n  display: block;\n  position: fixed;\n  left: 1em;\n  bottom: 1em;\n  min-width: 25%;\n  padding: .2em .4em;\n  border: 1px solid #888;\n  font-size: 90%;\n  background-color: #F8F8F8;\n  color: black;\n}\n\nforeignObject[data-mjx-xml] {\n  font-family: initial;\n  line-height: normal;\n  overflow: visible;\n}\n\nmjx-container[jax=&quot;SVG&quot;] path[data-c], mjx-container[jax=&quot;SVG&quot;] use[data-c] {\n  stroke-width: 3;\n}\n"},"Math/Math-Constellation-Game-Ideas":{"title":"Math Constellation Game Ideas","links":[],"tags":["gamedev","programming","learning"],"content":"A game where you recreate a constellation using as few functions as possible\nOther ideas: the normal get problems to solve to reveal points for a map. Maybe ask teacher for help\nDraw mockup I guess?? And print out and show during class yeah\nOk basically do this\nFor programming create a dictionary containing the problems and their components, like {fx:2, fy:3: a:x, b:8, c:8} or however many elemenrs there are\nYou build this by taking the actual end result (fx and fy) and fuckin with them until you get a function\nOk how do you get the x’s? By solving another math problem like\nMissing \\begin{align} or extra \\end{align}4a+a=10\\\\ a=2\\\\ b-2=8\\\\ b=10 \\end{align}\nThen swap em out or add them (or multiply) them together\nGenerate huge formulae to get those values too\n\nmjx-container[jax=&quot;SVG&quot;] {\n  direction: ltr;\n}\n\nmjx-container[jax=&quot;SVG&quot;] &gt; svg {\n  overflow: visible;\n  min-height: 1px;\n  min-width: 1px;\n}\n\nmjx-container[jax=&quot;SVG&quot;] &gt; svg a {\n  fill: blue;\n  stroke: blue;\n}\n\nmjx-container[jax=&quot;SVG&quot;][display=&quot;true&quot;] {\n  display: block;\n  text-align: center;\n  margin: 1em 0;\n}\n\nmjx-container[jax=&quot;SVG&quot;][display=&quot;true&quot;][width=&quot;full&quot;] {\n  display: flex;\n}\n\nmjx-container[jax=&quot;SVG&quot;][justify=&quot;left&quot;] {\n  text-align: left;\n}\n\nmjx-container[jax=&quot;SVG&quot;][justify=&quot;right&quot;] {\n  text-align: right;\n}\n\ng[data-mml-node=&quot;merror&quot;] &gt; g {\n  fill: red;\n  stroke: red;\n}\n\ng[data-mml-node=&quot;merror&quot;] &gt; rect[data-background] {\n  fill: yellow;\n  stroke: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; line[data-line], svg[data-table] &gt; g &gt; line[data-line] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; rect[data-frame], svg[data-table] &gt; g &gt; rect[data-frame] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; .mjx-dashed, svg[data-table] &gt; g &gt; .mjx-dashed {\n  stroke-dasharray: 140;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; .mjx-dotted, svg[data-table] &gt; g &gt; .mjx-dotted {\n  stroke-linecap: round;\n  stroke-dasharray: 0,140;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; g &gt; svg {\n  overflow: visible;\n}\n\n[jax=&quot;SVG&quot;] mjx-tool {\n  display: inline-block;\n  position: relative;\n  width: 0;\n  height: 0;\n}\n\n[jax=&quot;SVG&quot;] mjx-tool &gt; mjx-tip {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\nmjx-tool &gt; mjx-tip {\n  display: inline-block;\n  padding: .2em;\n  border: 1px solid #888;\n  font-size: 70%;\n  background-color: #F8F8F8;\n  color: black;\n  box-shadow: 2px 2px 5px #AAAAAA;\n}\n\ng[data-mml-node=&quot;maction&quot;][data-toggle] {\n  cursor: pointer;\n}\n\nmjx-status {\n  display: block;\n  position: fixed;\n  left: 1em;\n  bottom: 1em;\n  min-width: 25%;\n  padding: .2em .4em;\n  border: 1px solid #888;\n  font-size: 90%;\n  background-color: #F8F8F8;\n  color: black;\n}\n\nforeignObject[data-mjx-xml] {\n  font-family: initial;\n  line-height: normal;\n  overflow: visible;\n}\n\nmjx-container[jax=&quot;SVG&quot;] path[data-c], mjx-container[jax=&quot;SVG&quot;] use[data-c] {\n  stroke-width: 3;\n}\n"},"Math/Math-Index":{"title":"Math Index","links":["Math/Shortcuts","Math/Absolute-Values-in-Algebra","Math/Completing-The-Square","Math/Big-Unorganized-Math-Notes","Math/Logarithms"],"tags":[],"content":"These are going to be all of my notes on math, ones that work specifically for me but may work for you\nResources §\n\nGeoGebra\n\nGreat site to graph and export graphs to SVG. A little wonky if you want a specific size, but it works!\n\n\nDesmos\n\nThe best site for graphing if you JUST want a line, no points or anything. You can export in png or SVG in a constant size (unlike GeoGebra)\n\n\n\nNotes §\n\nShortcuts\nAbsolute Values in Algebra\nCompleting The Square\nBig Unorganized Math Notes\nLogarithms\n"},"Math/More-Functions":{"title":"More Functions","links":[],"tags":[],"content":"Inverse Functions §\nIt’s possible for a function to have an inverse function. in order for there to be an inverse function, the base function must satisfy the horizontal test, meaning for every  value, theres only one possible  value. Because if that, each pair of numbers must not repeat.\nBecause of that, you get some interesting phenomenon!\nFor example, they are always mirrored on the  axis!\nAlso, if you have the point  on on function, on the mirrored function you’ll have the point \n\n[!info|ttl-c] Graph\nheight=300\nwidth=300\n---\n\nf(x)=\\sqrt{x}\n\n\n\n                  \n                  Graph \n                  \n                \n\n\nmjx-container[jax=&quot;SVG&quot;] {\n  direction: ltr;\n}\n\nmjx-container[jax=&quot;SVG&quot;] &gt; svg {\n  overflow: visible;\n  min-height: 1px;\n  min-width: 1px;\n}\n\nmjx-container[jax=&quot;SVG&quot;] &gt; svg a {\n  fill: blue;\n  stroke: blue;\n}\n\nmjx-container[jax=&quot;SVG&quot;][display=&quot;true&quot;] {\n  display: block;\n  text-align: center;\n  margin: 1em 0;\n}\n\nmjx-container[jax=&quot;SVG&quot;][display=&quot;true&quot;][width=&quot;full&quot;] {\n  display: flex;\n}\n\nmjx-container[jax=&quot;SVG&quot;][justify=&quot;left&quot;] {\n  text-align: left;\n}\n\nmjx-container[jax=&quot;SVG&quot;][justify=&quot;right&quot;] {\n  text-align: right;\n}\n\ng[data-mml-node=&quot;merror&quot;] &gt; g {\n  fill: red;\n  stroke: red;\n}\n\ng[data-mml-node=&quot;merror&quot;] &gt; rect[data-background] {\n  fill: yellow;\n  stroke: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; line[data-line], svg[data-table] &gt; g &gt; line[data-line] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; rect[data-frame], svg[data-table] &gt; g &gt; rect[data-frame] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; .mjx-dashed, svg[data-table] &gt; g &gt; .mjx-dashed {\n  stroke-dasharray: 140;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; .mjx-dotted, svg[data-table] &gt; g &gt; .mjx-dotted {\n  stroke-linecap: round;\n  stroke-dasharray: 0,140;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; g &gt; svg {\n  overflow: visible;\n}\n\n[jax=&quot;SVG&quot;] mjx-tool {\n  display: inline-block;\n  position: relative;\n  width: 0;\n  height: 0;\n}\n\n[jax=&quot;SVG&quot;] mjx-tool &gt; mjx-tip {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\nmjx-tool &gt; mjx-tip {\n  display: inline-block;\n  padding: .2em;\n  border: 1px solid #888;\n  font-size: 70%;\n  background-color: #F8F8F8;\n  color: black;\n  box-shadow: 2px 2px 5px #AAAAAA;\n}\n\ng[data-mml-node=&quot;maction&quot;][data-toggle] {\n  cursor: pointer;\n}\n\nmjx-status {\n  display: block;\n  position: fixed;\n  left: 1em;\n  bottom: 1em;\n  min-width: 25%;\n  padding: .2em .4em;\n  border: 1px solid #888;\n  font-size: 90%;\n  background-color: #F8F8F8;\n  color: black;\n}\n\nforeignObject[data-mjx-xml] {\n  font-family: initial;\n  line-height: normal;\n  overflow: visible;\n}\n\nmjx-container[jax=&quot;SVG&quot;] path[data-c], mjx-container[jax=&quot;SVG&quot;] use[data-c] {\n  stroke-width: 3;\n}\n"},"Math/Shortcuts":{"title":"Shortcuts","links":[],"tags":[],"content":"This is where I’ll have various shortcuts.\nQuickly Foil  §\nIf you have something like this\nMissing \\begin{align} or extra \\end{align}(x-8)^2 \\\\  \\end{align}$$ Instead of manually FOILing it out, you can just do this: First, be sure to keep the b&#039;s sign the same when doubling it, weird I know!\n\\begin{gather} \\\nx^2+2(b)+b^2\n\\end{gather}\n\n\\begin{gather} \\\nx^2+2(-8)+(-8)^2\\\nx^2 -16+64\n\\end{gather}\n\nmjx-container[jax=&quot;SVG&quot;] {\n  direction: ltr;\n}\n\nmjx-container[jax=&quot;SVG&quot;] &gt; svg {\n  overflow: visible;\n  min-height: 1px;\n  min-width: 1px;\n}\n\nmjx-container[jax=&quot;SVG&quot;] &gt; svg a {\n  fill: blue;\n  stroke: blue;\n}\n\nmjx-container[jax=&quot;SVG&quot;][display=&quot;true&quot;] {\n  display: block;\n  text-align: center;\n  margin: 1em 0;\n}\n\nmjx-container[jax=&quot;SVG&quot;][display=&quot;true&quot;][width=&quot;full&quot;] {\n  display: flex;\n}\n\nmjx-container[jax=&quot;SVG&quot;][justify=&quot;left&quot;] {\n  text-align: left;\n}\n\nmjx-container[jax=&quot;SVG&quot;][justify=&quot;right&quot;] {\n  text-align: right;\n}\n\ng[data-mml-node=&quot;merror&quot;] &gt; g {\n  fill: red;\n  stroke: red;\n}\n\ng[data-mml-node=&quot;merror&quot;] &gt; rect[data-background] {\n  fill: yellow;\n  stroke: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; line[data-line], svg[data-table] &gt; g &gt; line[data-line] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; rect[data-frame], svg[data-table] &gt; g &gt; rect[data-frame] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; .mjx-dashed, svg[data-table] &gt; g &gt; .mjx-dashed {\n  stroke-dasharray: 140;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; .mjx-dotted, svg[data-table] &gt; g &gt; .mjx-dotted {\n  stroke-linecap: round;\n  stroke-dasharray: 0,140;\n}\n\ng[data-mml-node=&quot;mtable&quot;] &gt; g &gt; svg {\n  overflow: visible;\n}\n\n[jax=&quot;SVG&quot;] mjx-tool {\n  display: inline-block;\n  position: relative;\n  width: 0;\n  height: 0;\n}\n\n[jax=&quot;SVG&quot;] mjx-tool &gt; mjx-tip {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\nmjx-tool &gt; mjx-tip {\n  display: inline-block;\n  padding: .2em;\n  border: 1px solid #888;\n  font-size: 70%;\n  background-color: #F8F8F8;\n  color: black;\n  box-shadow: 2px 2px 5px #AAAAAA;\n}\n\ng[data-mml-node=&quot;maction&quot;][data-toggle] {\n  cursor: pointer;\n}\n\nmjx-status {\n  display: block;\n  position: fixed;\n  left: 1em;\n  bottom: 1em;\n  min-width: 25%;\n  padding: .2em .4em;\n  border: 1px solid #888;\n  font-size: 90%;\n  background-color: #F8F8F8;\n  color: black;\n}\n\nforeignObject[data-mjx-xml] {\n  font-family: initial;\n  line-height: normal;\n  overflow: visible;\n}\n\nmjx-container[jax=&quot;SVG&quot;] path[data-c], mjx-container[jax=&quot;SVG&quot;] use[data-c] {\n  stroke-width: 3;\n}\n"},"Textbook-Collection":{"title":"Textbook Collection","links":["Math","Programming","Japanese"],"tags":["learning"],"content":"This is a collection of textbooks that I have found interesting! Only the ones with stars are ones I have read\nMath &amp; Programming §\no’reilly designing data intensive (ebook)\nJapanese §\n\nMinna No Nihongo\nJapanese the Manga Way\n"},"digital-garden-resources":{"title":"digital garden resources","links":[],"tags":[],"content":"\nA Brief History &amp; Ethos of the Digital Garden\nDigital Gardening Tools and Resources on GitHub\n"},"index":{"title":"The Pathway into the Hedges","links":["digital-garden-resources","Math/Math-Index","Books","Linguistics","Japanese","Goals"],"tags":[],"content":"Welcome to my digital garden: The Flowerbed. A multi layered and sporadically growing hedgemaze of musings and curiosities.\nIf you’ve never heard of a digital garden before, check out this page for links to articles and resources.\nThis is not going to be a orderly and finely maintained wiki, far from it. This is going to be a constantly shifting and changing place, with some paths being prestine and lovingly poliahed, and others being covered in cobwebs and dust. Despite my best intentions, the information therein will always be somewhere within the spectrum of correct and incorrect. If there is anything glaringly wrong, please email me at mail@bluerose.garden and I will address it as soon as I can.\nNow go forth and explore some of the winding paths that lay before you. Use the graph at the bottom of the page as your map, and the back links to discover alternate paths and little tucked away corners that pocket this place.\nHere are some starting paths:\nPaths §\n\nMath\nBooks\nLinguistics\nJapanese\nGoals\nTags\n"}}